[project]
name = "policy-aware-order-chatbot"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.115.12",
    "httpx>=0.28.1",
    "jupyter>=1.1.1",
    "langchain>=0.3.25",
    "langchain-community>=0.3.24",
    "langchain-openai>=0.3.19",
    "langgraph>=0.4.8",
    "matplotlib>=3.10.3",
    "numpy>=2.2.6",
    "pandas>=2.2.3",
    "pydantic>=2.11.5",
    "pytest>=8.4.0",
    "pytest-asyncio>=0.23.0",
    "python-dotenv>=1.1.0",
    "scikit-learn>=1.6.1",
    "seaborn>=0.13.2",
    "uvicorn>=0.34.3",
]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["chatbot*"]
exclude = ["data*", "monitoring*", "evaluation_results*"]

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "S",  # flake8-bandit
]
ignore = [
    "E501", # line too long, handled by ruff format
    "S101", # Ignore S101 (asserts) for test files
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101"] # Ignore S101 (asserts) for test files

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
show_error_codes = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [
    ".",
]
python_files = [
    "test_*.py",
]
